$('<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></' + 'script>').appendTo(document.body);

function initKancolleWiki(){
    var msg = "<div id='CATkancolleWiki'>";
    msg += "艦これ攻略 Wiki："
    msg += "<a target='_blank' href='http://wikiwiki.jp/kancolle/?%B7%FA%C2%A4'>艦娘レシピ早見表</a> ｜ ";
    msg += "<a target='_blank' href='http://wikiwiki.jp/kancolle/?%B3%AB%C8%AF'>裝備レシピ早見表</a> ｜ ";
    msg += "<a target='_blank' href='http://wikiwiki.jp/kancolle/?%B1%F3%C0%AC'>遠征早見表</a> ｜ ";
    msg += "<a target='_blank' href='http://wikiwiki.jp/kancolle/?%C7%A4%CC%B3'>任務一覧</a>";
    msg += "</div>";
    $('body').append(msg);

    $('#CATkancolleWiki').css({
      'z-index'    : 99,
      'font-size'  : '14px'
    });
}

// Ignore and dismiss Javascript confirm() generated by www.dmm.com
// alert(), confirm(), prompt()
function ignorePrompt(text) {
    console.log("Ignored page message: " + text);
    // If we return true, the page would refresh and "this page is not available in your area"
    return false;
};
window.confirm = ignorePrompt;
window.alert = ignorePrompt;
window.prompt = ignorePrompt;

function removeSection(divClassOrId){
    var target = $(divClassOrId);
    // if target exist, i.e, if jQuery selector is not null
    if(target.length){
        target.remove();
    }
}

function editKancollePageCSS(){
    $("#main-ntg").css("text-align","left");
    $("#main-ntg").css("margin","-16px -62px");
    $("#main-ntg").css("position","static");
    $("#game_frame").css("height","500");
}

function coverUpAdmiralName(){
    var wakame = "<div id='wakame'></div>";
    $('body').prepend(wakame);
    $('#wakame').css({
        'z-index'    : 10,
        'width'      : '170px',
        'height'     : '20px',
        'position'   : 'absolute',
        'top'        : '6px',
        'left'       : '113px',
        // 'background' : '#34332D'
        'background' : '#302F2E'
    });
}


function initKancollePage(){
    removeSection("#dmm_ntgnavi");
    removeSection("#dmm-ntgnavi-renew");
    removeSection(".area-naviapp");
    removeSection("#foot");
    editKancollePageCSS();
    coverUpAdmiralName();
}


$(function(){
    // We need wait a little period for kancolle page to load its iFrame
    setTimeout(function(){
        main()
    }, 500);
});

function main(){
    initKancollePage();
    initCAT();
    initKancolleWiki();
}

function initCAT(){
    // squares 架構： body > CATsquaresContainer > myTable > myTbody > tr > td > squares
    // Container 的用意在於，當需要清空 squares 時，只需要 $('#CATsquaresContainer').empty();
    setSquaresConatinerHTML();
    // Control Panel 則自己獨立，跟 Container 和 Squares 沒有任何 parent-child 關係
    setControlPannelComplete();
}


/*
    ------ # Container ------
*/
function setSquaresConatinerHTML(){
    var squaresContainer = "<div id='CATsquaresContainer'></div>";
    $('body').prepend(squaresContainer);
}


/*
    ------ # Control Pannel ------
*/
function setControlPannelComplete(){
    setControlPannelHTML();
    setControlPannelCSS();
    setControlPannelHandler();
}

function setControlPannelHTML(){
    var cp =  "<div id=CATcontrolPanel>";
    cp += "Square Length: <input type='number' style='width:40px;' min='1' max='30' id='sq_length' value='15'><br>";
    cp += "Row: <input type='number' style='width:50px;' min='1' max='100' id='sq_row' value='29'><br>";
    cp += "Col: <input type='number' style='width:50px;' min='1' max='100' id='sq_col' value='47'><br>";
    cp += "Default Color: <input type='color' id='sq_default_color' value='#cccccc'><br>";
    cp += "Default Opacity: [1~10]<input type='range' id='sq_default_opacity' min='1' max='10' value='2'><br>";
    cp += "Clicked Color: <input type='color' id='sq_clicked_color' value='#FF0000'><br>";
    cp += "Clicked Opacity: [1~10]<input type='range' id='sq_clicked_opacity' min='1' max='10' value='5'><br>";
    cp += "Font Color: <input type='color' id='sq_font_color' value='#ffffff'><br>";
    cp += "<button class=controlPanelButton id='btn_addSquares'>Append</button>";
    cp += "<button class=controlPanelButton id='btn_removeSquares'>Remove</button>";
    cp += "<hr>";

    cp += "<b>Output Offset</b><br/>";
    cp += "X: <input type='number' style='width:50px;' min='-100' max='100' id='sq_pos_offset_x' value='0'>";
    cp += ", Y: <input type='number' style='width:50px;' min='-100' max='100' id='sq_pos_offset_y' value='100'>";
    cp += "<button class=controlPanelButton id='btn_resetOffsetX'>Reset X</button>";
    cp += "<button class=controlPanelButton id='btn_resetOffsetY'>Reset Y</button>";
    cp += "<hr>";

    cp += "<b>Result: </b>";
    cp += "Relative Position<input type='text' style='width:150px;' id='input_relative_position'>";
    cp += "(Press 'ctrl+c' to copy)<br/>";
    cp += "<hr>";

    cp += "<input type='checkbox' id='cb_print_to_console'>console.log(result)<br/>";
    cp += "removeCAT()<br>";
    cp += "clearAllSquares()<br>";
    cp += "</div>";
    $('body').append(cp);
}

function setControlPannelCSS(){
    var cpWidth = 180;
    var cpHeight = 468;
    var leftPadding = 2;
    $("#CATcontrolPanel").css({
      'z-index'    : 99,
      // 'left'       : ($(window).width() - cpWidth - 20) + 'px',
      'left'       : (800 + leftPadding) + 'px',
      'top'        : '0px',
      'position'   : 'absolute',
      'height'     : cpHeight + 'px',
      'width'      : cpWidth + 'px',
      'border'     : '1px solid black',
      'padding'    : '5px',
      'background' : '#aaffdd'
    });

    $(".controlPanelButton").css({
      'margin'     : '3px',
      'padding'    : '3px',
      'cursor'     : 'pointer'
    });

    $("#input_relative_position").css({
        'font-size' : '24px'
    });
}

function setControlPannelHandler(){
    $("#btn_addSquares").click(function(event){
        clearAllSquares();
        setSquareTableComplete();
    });

    $("#btn_removeSquares").click(function(event){
        clearAllSquares();
    });

    $("#btn_resetOffsetX").click(function(event){
        $("#sq_pos_offset_x").val(0);
    });
    $("#btn_resetOffsetY").click(function(event){
        $("#sq_pos_offset_y").val(0);
    });
}


/*
    ------ # Square Table ------
*/
function setSquareTableComplete(){
    setSquareTableHTML();
    setSquareTableCSS();
    setSquareTableHandler();
}

function setSquareTableHTML(){
    var column = $("#sq_col").val();
    var row = $("#sq_row").val();
    var table = "<table id='myTableFullOfSquares'><tbody id='myTbody'>";
    for(var i=1;i<=row;i++){
      table += "<tr>";
        for(var k=1;k<=column;k++){
          table += "<td><div class='mySquares'></div></td>"
        }
      table += "</tr>";
    }
    table += "</myTbody></table>";
    $('#CATsquaresContainer').prepend(table);
}

function setSquareTableCSS(){
    $("#myTableFullOfSquares").css({
      'z-index'        : 20,
      'margin'         : 0,
      'top'            : 0,
      'left'           : 0,
      'position'       : 'absolute',
      'border'         : 'none',
      'border-style'   : 'none',
      'border-spacing' : '0px',
      'border-collapse': 'collapse',
      'cellspacing'    : '0px',
      'cellpadding'    : '0px'
    });

    var square_length = $("#sq_length").val() + 'px';
    $(".mySquares").css({
        'margin'     : '0px',
        'height'     : square_length,
        'width'      : square_length,
        'cursor'     : 'crosshair',
        // 'border'     : '1px solid white', // The default kancolle page will apply solid border to table
        'opacity'    : $("#sq_default_opacity").val() * 0.1,
        'color'      : $("#sq_font_color").val(),   // font color
        'background' : $("#sq_default_color").val()
    });
}

function setSquareTableHandler(){
    $(".mySquares").click(function(){
        $(this).css('background', $("#sq_clicked_color").val());
        $(this).css('opacity', $("#sq_clicked_opacity").val() * 0.1);
        $(this).css('color', $("#sq_font_color").val());
        var count = $(this).text();
        if($(this).text().length == 0){
            $(this).text('1');
        }else{
            $(this).text(parseInt($(this).text())+1);
        }

        var mPosX = event.clientX + parseInt($("#sq_pos_offset_x").val());
        var mPosY = event.clientY + parseInt($("#sq_pos_offset_y").val());
        var mPositionList = "(" + mPosX + "," + mPosY + ")";
        $("#input_relative_position").val(mPositionList);
        selectResult();

        if($("#cb_print_to_console").prop('checked')){
            var square_length = parseInt($("#sq_length").val());
            var mAbsMinX = $(this).offset().left;
            var mAbsMaxX = $(this).offset().left + square_length;
            var mAbsMinY = $(this).offset().top;
            var mAbsMaxY = $(this).offset().top + square_length;
            console.log("[Square Table] clicked absolute position =  " + "(" + mAbsMinX + "~" + mAbsMaxX + "," + mAbsMinY + "~" + mAbsMaxY + ")");
            console.log("[Square Table] clicked relative position =  " + "(" + mPosX + "," + mPosY + ")");
            console.log("[Square Table] clicked relative offset =  " + mPositionList);
        }
    });
}


/*
    ------ # Helper Functions ------
*/
function removeCAT(){
    $("#CATcontrolPanel").remove();
    $("#CATsquaresContainer").remove();
    $("#CATkancolleWiki").remove();
    $('#wakame').remove();
}

function clearAllSquares(){
    $("#CATsquaresContainer").empty();
}

function selectResult(){
    $("#input_relative_position").select();
}
